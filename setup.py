"""
A Python toolkit for computing solid-state NMR observables from MD simulations  
"""

from distutils.core import setup
import os
import subprocess

# Version Details

VERSION = '0.0.1'
ISRELEASED = False
__version__ = VERSION

def git_version():

    def _minimal_ext_cmd(cmd):
        # construct minimal environment
        env = {}
        for k in ['SYSTEMROOT', 'PATH']:
            v = os.environ.get(k)
            if v is not None:
                env[k] = v
        # LANGUAGE is used on win32
        env['LANGUAGE'] = 'C'
        env['LANG'] = 'C'
        env['LC_ALL'] = 'C'
        out = subprocess.Popen(
            cmd, stdout=subprocess.PIPE, env=env).communicate()[0]
        return out

    try:
        out = _minimal_ext_cmd(['git', 'rev-parse', 'HEAD'])
        GIT_REVISION = out.strip().decode('ascii')
    except OSError:
        GIT_REVISION = 'Unknown'

    return GIT_REVISION


def write_version_py(filename='traj2nmr/version.py'):
    cnt = """
# This file is automatically generated by setup.py
short_version = '%(version)s'
version = '%(version)s'
full_version = '%(full_version)s'
git_revision = '%(git_revision)s'
release = %(isrelease)s
if not release:
    version = full_version
"""
    # Adding the git rev number needs to be done inside write_version_py(),
    # otherwise the import of numpy.version messes up the build under Python 3.
    FULLVERSION = VERSION
    if os.path.exists('.git'):
        GIT_REVISION = git_version()
    else:
        GIT_REVISION = 'Unknown'

    if not ISRELEASED:
        FULLVERSION += '.dev-' + GIT_REVISION[:7]

    a = open(filename, 'w')
    try:
        a.write(cnt % {'version': VERSION,
                       'full_version': FULLVERSION,
                       'git_revision': GIT_REVISION,
                       'isrelease': str(ISRELEASED)})
    finally:
        a.close()


# Installation
write_version_py()

with open('LICENSE') as f:
    LICENSE = f.read()

LONG_DESCRIPTION = """
A Python toolkit for computing solid-state NMR observables from MD simulations
"""

setup(
    name='traj2nmr', 
    version=VERSION, 
    author='Daniel Weber', 
    author_email='dkweber@webersc.com', 
    license=LICENSE, 
    url='TBD', 
    packages=['traj2nmr', 
             ],
    package_dir={'traj2nmr': 'traj2nmr', 
                }, 
    platforms=['Linux'], 
    description='Python toolkit for NMR spectral simulation', 
    requires=['numpy', 'matplotlib', 'pandas', 'mdtraj'], 
    long_description=LONG_DESCRIPTION,
)
